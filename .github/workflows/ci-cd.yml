name: Full CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - feature/**
    paths:
      - 'src/**'
      - 'app/**'
      - 'tests/**'
      - '.github/workflows/**'
  pull_request:
    branches: 
      - main
      - feature/**

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-push-deploy:
    runs-on: self-hosted
    timeout-minutes: 30  # Prevent hanging jobs

    env:
      IMAGE: yourdockeruser/prima-api
      DYNAMODB_TABLE: test-table  # For test environment
      AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'  # Enable dependency caching

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit flake8 pytest moto

      - name: Lint with flake8
        run: |
          flake8 app/ || exit 1

      - name: Run Bandit security scan
        run: bandit -r app/

      - name: Run Flake8 linting
        run: flake8 app/

      - name: Run tests with pytest
        run: pytest tests/ -v

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Define Docker tag
        id: vars
        run: |
          TAG=$(echo "${GITHUB_REF##*/}" | tr '/' '-')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Using tag: ${TAG}"

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'  # Only push from main branch
        run: docker push ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}

      - name: Deploy to local Kubernetes
        run: |
          kubectl set image deployment/prima-api prima-api=${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}
          kubectl rollout status deployment/prima-api --timeout=90s