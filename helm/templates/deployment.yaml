apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        ports:
        - containerPort: {{ .Values.containerPort }}
          name: http

        env:
        {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: "{{ $value }}"
        {{- end }}

        resources:
          {{- toYaml .Values.resources | nindent 10 }}

        # üîÅ Liveness Probe: Should survive app hangs
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.containerPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        # üü° Readiness Probe: Only ready when app + dependencies are ready
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.containerPort }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        # üõ° Optional: Startup Probe (for slow-starting apps)
        # startupProbe:
        #   httpGet:
        #     path: /health
        #     port: {{ .Values.containerPort }}
        #   failureThreshold: 30
        #   periodSeconds: 10